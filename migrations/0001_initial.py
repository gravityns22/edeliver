# Generated by Django 2.1.3 on 2018-11-13 12:47

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(message='Username must be Alphanumeric or any of the following: ". @ + -"', regex='^[a-zA-Z0-9.@+-]*$')])),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('date_of_birth', models.DateField()),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='APIService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_provider', models.TextField(choices=[('wordpress', 'Wordpress'), ('wocommerce', 'Woocommerce'), ('auspost', 'Australia Post'), ('fedex', 'FedEx')], default='auspost')),
                ('api_name', models.TextField(choices=[('wordpress_rest_api', 'Wordpress REST API'), ('wocommerce_rest_api', 'Woocommerce REST API'), ('auspost_pac', 'Australia Post - PAC API'), ('fedex', 'FedEx')], default='auspost_pac')),
                ('api_key', models.TextField(max_length=150)),
                ('api_secret', models.TextField(default=None, help_text='Required for Wordpress & Woocommerce', max_length=150)),
                ('api_is_publc', models.BooleanField(default=False)),
                ('api_category', models.TextField(max_length=150)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.TextField()),
                ('name', models.TextField()),
                ('slug', models.TextField()),
                ('permalink', models.TextField()),
                ('date_created', models.TextField()),
                ('date_created_gmt', models.TextField()),
                ('date_modified', models.TextField()),
                ('date_modified_gmt', models.TextField()),
                ('type', models.TextField()),
                ('status', models.TextField()),
                ('featured', models.TextField()),
                ('catalog_visibility', models.TextField()),
                ('description', models.TextField()),
                ('short_description', models.TextField()),
                ('sku', models.TextField()),
                ('price', models.TextField()),
                ('regular_price', models.TextField()),
                ('sale_price', models.TextField()),
                ('date_on_sale_from', models.TextField()),
                ('date_on_sale_from_gmt', models.TextField()),
                ('date_on_sale_to', models.TextField()),
                ('date_on_sale_to_gmt', models.TextField()),
                ('price_html', models.TextField()),
                ('on_sale', models.TextField()),
                ('purchasable', models.TextField()),
                ('total_sales', models.TextField()),
                ('virtual', models.TextField()),
                ('downloadable', models.TextField()),
                ('downloads', models.TextField()),
                ('download_limit', models.TextField()),
                ('download_expiry', models.TextField()),
                ('external_url', models.TextField()),
                ('button_text', models.TextField()),
                ('tax_status', models.TextField()),
                ('tax_class', models.TextField()),
                ('manage_stock', models.TextField()),
                ('stock_quantity', models.TextField()),
                ('stock_status', models.TextField()),
                ('backorders', models.TextField()),
                ('backorders_allowed', models.TextField()),
                ('backordered', models.TextField()),
                ('sold_individually', models.TextField()),
                ('weight', models.TextField()),
                ('dimensions', models.TextField()),
                ('shipping_required', models.TextField()),
                ('shipping_taxable', models.TextField()),
                ('shipping_class', models.TextField()),
                ('shipping_class_id', models.TextField()),
                ('reviews_allowed', models.TextField()),
                ('average_rating', models.TextField()),
                ('rating_count', models.TextField()),
                ('related_ids', models.TextField()),
                ('upsell_ids', models.TextField()),
                ('cross_sell_ids', models.TextField()),
                ('parent_id', models.TextField()),
                ('purchase_note', models.TextField()),
                ('categories', models.TextField()),
                ('tags', models.TextField()),
                ('images', models.TextField()),
                ('attributes', models.TextField()),
                ('default_attributes', models.TextField()),
                ('variations', models.TextField()),
                ('grouped_products', models.TextField()),
                ('menu_order', models.TextField()),
                ('meta_data', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WareHouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('warehouse_code', models.CharField(max_length=50)),
                ('default_warehouse_base', models.BooleanField(default=False)),
                ('warehouse_slug', models.TextField(max_length=250)),
                ('address_line_1', models.TextField(max_length=250)),
                ('city', models.CharField(max_length=250)),
                ('state', models.CharField(max_length=250)),
                ('post_code', models.CharField(max_length=250)),
                ('country', models.CharField(max_length=250)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='warehouse_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='edeliver.WareHouse'),
        ),
    ]
